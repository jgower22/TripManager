<%- include('../partials/header.ejs')%>
    <script defer src="/javascript/deleteConfirmation.js"></script>
    <script defer src="/javascript/leaflet.js"></script>
    <main>
        <div id="main_content_centered">
            <div id="trip_container">
                <div id="top_trip">
                    <%if (accessType === 'owner' || accessType === 'editor') {%>
                        <div id="buttons_container">
                            <form>
                                <button class="button" id="update" type="submit" formmethod="GET"
                                    formaction="/trips/<%=trip._id%>/edit">Edit Trip</button>
                                <%if (accessType === 'owner') {%>
                                    <button class="button" id="delete" type="submit" formmethod="POST"
                                        formaction="/trips/<%=trip._id%>?_method=DELETE">Delete Trip</button>
                                <%}%>
                            </form>
                        </div>
                    <%}%>
                    <form>
                        <button class="button" id="pdf" type="submit" formmethod="GET" formaction="/trips/<%=trip._id%>/pdf">Download PDF</button>
                        <a href="/trips/<%=trip._id%>/share">
                            <button class="button" type="button">Share</button>
                         </a>
                    </form>
                    <h1 id="tripName"><%=trip.name%></h1>

                    <h4>Created by <%=trip.createdBy.firstName%> <%=trip.createdBy.lastName%></h4>
                    <h4>Last modified on: <%=trip.updatedAt%></h4>
                    <div id="map"></div>
                    
                    <h3 id="locationHeader" class="locationHeader">Location: <%=trip.location%></h3>

                    <% const dateFormat = { 
                        ...DateTime.DATE_FULL, 
                        weekday: 'long' 
                    }; 
                    const startDate = DateTime.fromISO(trip.startDate); 
                    const formattedStartDate = startDate.toLocaleString(dateFormat); 
                    const endDate = DateTime.fromISO(trip.endDate); 
                    const formattedEndDate = endDate.toLocaleString(dateFormat);%>

                    <h3><%=formattedStartDate%> - <%=formattedEndDate%></h3>
                </div>
                <div id="description">
                    <h1>Description</h1>
                    <%function replacer(match, p1, p2, p3, offset, string) {
                        // p1 is non-digits, p2 digits, and p3 non-alphanumerics
                        return validator.escape(match);
                    }

                    function linkify(inputText) {
                        var replacedText, replacePattern1, replacePattern2, replacePattern3, replacePattern4, replacePattern5;
                    
                        //Unescape text
                        inputText = validator.unescape(inputText);

                        //Check for html tags
                        replacePattern5 = /<\/?[^>]*>/gims;
                        replacedText = inputText.replace(replacePattern5, replacer);

                        //URLs starting with http://, https://, or ftp://
                        replacePattern1 = /(\b(https?|ftp):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gim;
                        replacedText = replacedText.replace(replacePattern1, '<a href="$1" target="_blank" class="hyperlinks">$1</a>');
                    
                        //URLs starting with "www." (without // before it, or it'd re-link the ones done above).
                        replacePattern2 = /(^|[^\/])(www\.[\S]+(\b|$))/gim;
                        replacedText = replacedText.replace(replacePattern2, '$1<a href="http://$2" target="_blank" class="hyperlinks">$2</a>');
                    
                        //Change email addresses to mailto:: links.
                        replacePattern3 = /(([a-zA-Z0-9\-\_\.])+@[a-zA-Z\_]+?(\.[a-zA-Z]{2,6})+)/gim;
                        replacedText = replacedText.replace(replacePattern3, '<a href="mailto:$1" class="hyperlinks">$1</a>');

                        //Check for script tags
                        //replacePattern4 = /([<&][a-z]*[;]*)(script( .+[=]["'].+["'])*)([>&]*[a-z]*[;]*)([^>]*([<&][a-z]*[;]*)*(\/script)([>&]*[a-z]*[;]*))*/gim;
                        //replacedText = replacedText.replace(replacePattern4, '<>');
                        

                        return replacedText;
                    }%>
                    <p><%-linkify(escapedTrip.details)%></p>
                </div>
                <div id="days_container">
                    <h1>Days</h1>
                    <div id="days"></div>
                </div>
                <script>
                    var days = document.getElementById('days');
                    var trip = <%-JSON.stringify(escapedTrip)%>;
                    var tripDays = trip.days;
                    var numDays = tripDays.length;
                    //Max length is 3 currently
                    var acceptedValues = [7, 14, 21];
                    acceptedValues.push(numDays);
    
                    //Init max days shown
                    var maxDaysShown;
                    if (typeof (Storage) !== 'undefined') {
                        if (localStorage.getItem('maxDaysShown') === null) {
                            localStorage.setItem('maxDaysShown', acceptedValues[0]);
                            maxDaysShown = acceptedValues[0];
                        } else {
                            maxDaysShown = isNaN(localStorage.getItem('maxDaysShown')) ? acceptedValues[0] : localStorage.getItem('maxDaysShown');
                            if (acceptedValues.includes(parseInt(maxDaysShown)) === false) {
                                maxDaysShown = acceptedValues[0];
                                localStorage.setItem('maxDaysShown', maxDaysShown);
                            }
                        }
                    } else {
                        maxDaysShown = acceptedValues[0];
                    }
    
                    var currentStartDay = 0;
                    var currentEndDay = (trip.days.length < maxDaysShown) ? trip.days.length - 1 : maxDaysShown - 1;
    
                    function showDays(leftButtonClicked, rightButtonClicked) {
                        let maxDaysShown = localStorage.getItem('maxDaysShown');
                        if (acceptedValues.includes(parseInt(maxDaysShown)) === false) {
                            maxDaysShown = acceptedValues[0];
                            localStorage.setItem('maxDaysShown', maxDaysShown);
                        }
                        if (tripDays.length < maxDaysShown && currentStartDay === 0) {
                            maxDaysShown = tripDays.length;
                        }
                        let daysHTML = '';
    
                        //Update start and end day when left button is clicked
                        if (leftButtonClicked === true) {
                            let tempStartDay = currentStartDay;
                            currentStartDay = ((currentStartDay - maxDaysShown) <= 0) ? 0 : currentStartDay - maxDaysShown;
                            currentEndDay = (((currentEndDay - maxDaysShown) < 0) ? tripDays.length - 1 : tempStartDay - 1);
                            //currentEndDay = ((currentEndDay - maxDaysShown) <= 0) ? maxDaysShown - 1: (currentEndDay - (currentEndDay - (tempStartDay - 1)));
                            if ((currentEndDay - currentStartDay + 1) < maxDaysShown && maxDaysShown < tripDays.length) {
                                currentEndDay = currentStartDay + parseInt(maxDaysShown) - 1;
                            }
                        }
    
                        //Update start and end day when right button is clicked
                        if (rightButtonClicked === true) {
                            currentStartDay = ((currentStartDay + parseInt(maxDaysShown)) >= trip.days.length) ? trip.days.length - 1 : currentStartDay + parseInt(maxDaysShown);
                            currentEndDay = ((currentEndDay + parseInt(maxDaysShown)) >= trip.days.length) ? trip.days.length - 1 : currentEndDay + parseInt(maxDaysShown);
                        }
    
                        let formattedTotalDays = (tripDays.length > 1) ? 'days' : 'day';
                        if (tripDays.length > 1) {
                            daysHTML += "<h3 id='showMessage'>" + "Showing days " + currentStartDay + "-" + currentEndDay + " out of " + numDays + " days" + "</h3>";
                        } else if (tripDays.length === 1) {
                            daysHTML += "<h3 id='showMessage'>" + "Showing day " + currentStartDay + " out of " + numDays + " day" + "</h3>";
                        } else {
                            daysHTML += '<p>You have added no days to this trip.</p>';
                        }
    
                        //Add select options
                        daysHTML += "<select name='maxDaysSelect' id='maxDaysSelect'>";
                        switch (parseInt(maxDaysShown)) {
                            case acceptedValues[0]:
                                daysHTML += "<option value='" + acceptedValues[0] + "' selected>Show " + acceptedValues[0] + " Days</option>";
                                daysHTML += "<option value='" + acceptedValues[1] + "'>Show " + acceptedValues[1] + " Days</option>";
                                daysHTML += "<option value='" + acceptedValues[2] + "'>Show " + acceptedValues[2] + " Days</option>";
                                daysHTML += "<option value='All'>Show All Days</option>";
                                break;
                            case acceptedValues[1]:
                                daysHTML += "<option value='" + acceptedValues[0] + "'>Show " + acceptedValues[0] + " Days</option>";
                                daysHTML += "<option value='" + acceptedValues[1] + "' selected>Show " + acceptedValues[1] + " Days</option>";
                                daysHTML += "<option value='" + acceptedValues[2] + "'>Show " + acceptedValues[2] + " Days</option>";
                                daysHTML += "<option value='All'>Show All Days</option>";
                                break;
                            case acceptedValues[2]:
                                daysHTML += "<option value='" + acceptedValues[0] + "'>Show " + acceptedValues[0] + " Days</option>";
                                daysHTML += "<option value='" + acceptedValues[1] + "'>Show " + acceptedValues[1] + " Days</option>";
                                daysHTML += "<option value='" + acceptedValues[2] + "' selected>Show " + acceptedValues[2] + " Days</option>";
                                daysHTML += "<option value='All'>Show All Days</option>";
                                break;
                            case tripDays.length:
                                daysHTML += "<option value='" + acceptedValues[0] + "'>Show " + acceptedValues[0] + " Days</option>";
                                daysHTML += "<option value='" + acceptedValues[1] + "'>Show " + acceptedValues[1] + " Days</option>";
                                daysHTML += "<option value='" + acceptedValues[2] + "'>Show " + acceptedValues[2] + " Days</option>";
                                daysHTML += "<option value='All' selected>Show All Days</option>";
                                break;
                            default:
                                daysHTML += "<option value='" + acceptedValues[0] + "' selected>Show " + acceptedValues[0] + " Days</option>";
                                daysHTML += "<option value='" + acceptedValues[1] + "'>Show " + acceptedValues[1] + " Days</option>";
                                daysHTML += "<option value='" + acceptedValues[2] + "'>Show " + acceptedValues[2] + " Days</option>";
                                daysHTML += "<option value='All'>Show All Days</option>";
                        }
                        daysHTML += "</select>";
    
                        if (tripDays.length < maxDaysShown) {
                            maxDaysShown = tripDays.length;
                            localStorage.setItem('maxDaysShown', maxDaysShown);
                        }
    
                        for (let i = currentStartDay; i <= currentEndDay; i++) {
                            let day = tripDays[i];
                            let newDay = "<li class='list'><a href='" + trip._id + "/" + day.number + "' class='link_underline day_links'>Day " + day.number + " - " + day.location + "</a></li>";
                            daysHTML += newDay;
                        }
    
                        //Add prev/next buttons if necessary
                        let addLeftButton = true;
                        if (currentStartDay === 0) {
                            addLeftButton = false;
                        }
    
                        if (addLeftButton) {
                            daysHTML += "<button id='left_button' class='button' ><</button>";
                        }
    
                        let addRightButton = true;
                        if (currentEndDay === tripDays.length - 1) {
                            addRightButton = false;
                        }
    
                        if (addRightButton) {
                            daysHTML += "<button id='right_button' class='button' >></button>";
                        }
                        days.innerHTML = daysHTML;
    
                        document.getElementById('maxDaysSelect').addEventListener('change', handleSelectChange);
    
                        if (addLeftButton) {
                            let leftButton = document.getElementById('left_button');
                            leftButton.addEventListener('click', function () {
                                showDays(true, false);
                            });
                        }
    
                        if (addRightButton) {
                            let rightButton = document.getElementById('right_button');
                            rightButton.addEventListener('click', function () {
                                showDays(false, true);
                            });
                        }
                    }
    
                    showDays(false, false);
    
                    function handleSelectChange() {
                        //Get and set new value to local storage
                        let selectedMaxDaysShown = document.getElementById('maxDaysSelect').value;
                        if (selectedMaxDaysShown === 'All') {
                            currentStartDay = 0;
                            selectedMaxDaysShown = trip.days.length;
                        }
                        localStorage.setItem('maxDaysShown', selectedMaxDaysShown);
                        let storedMaxDaysShown = localStorage.getItem('maxDaysShown');
                        maxDaysShown = (storedMaxDaysShown > trip.days.length - 1 && currentStartDay === 0) ? trip.days.length : storedMaxDaysShown;
    
                        //Set current start/end day
                        console.log('TEST');
                        if (parseInt(maxDaysShown) >= trip.days.length) {
                            console.log('TRUE');
                            currentStartDay = 0;
                            currentEndDay = trip.days.length - 1;
                            console.log('CURRENT END DAY: ' + currentEndDay);
                        } else {
                            console.log('FALSE');
                            currentEndDay = currentStartDay + parseInt(maxDaysShown) - 1;
                            if (currentEndDay >= trip.days.length) 
                                currentEndDay = trip.days.length - 1;
                            console.log('MAX DAYS SHOWN: ' + maxDaysShown);
                            console.log('CURRENT END DAY: ' + currentEndDay);
                        }
                        //currentEndDay = ((currentStartDay + parseInt(maxDaysShown)) - 1 > trip.days.length - 1) ? trip.days.length - 1 : currentStartDay + parseInt(maxDaysShown) - 1;
    
                        showDays(false, false);
                    }
    
                    document.getElementById('maxDaysSelect').addEventListener('change', handleSelectChange);%>
                </script>
            </div>
        </div>
    </main>
    <%- include('../partials/footer.ejs')%>